# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

#  Time code:
import time
start_time = time.clock()

fib_seq = [1, 2, 3]
even_sum = 2
index = 2
while(max(fib_seq) < 4000000):
	fib_seq.append(fib_seq[index] + fib_seq[index - 1])
	index += 1
	if (fib_seq[index] % 2 == 0) and fib_seq[index] < 4000000:
		even_sum += fib_seq[index]

end_time = time.clock()
print("Elapsed time was:  %g seconds" % (end_time - start_time))

# print "Full sequence:\n", fib_seq
print "Sum of even terms: %d" % even_sum